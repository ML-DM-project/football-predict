Correlation Feature Selector with selection method=variance completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7650634249471457, best hyperparameter: {'C': 0.2, 'max_iter': 50}
Accuracy on test set: 0.7948717948717948

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7765327695560253, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7488900634249471, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6277484143763215, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.5

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7788054968287527, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7307692307692307

Result of SVC(random_state=2023):
Best accuracy: 0.7672832980972515, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.782051282051282

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7626321353065538, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7692307692307693

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7465644820295984, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7602536997885835, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Correlation Feature Selector with selection method=cardinality completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7673361522198731, best hyperparameter: {'C': 0.2, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.774260042283298, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.748890063424947, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6277484143763215, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.5

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7788054968287526, best hyperparameter: {'solver': 'lsqr'}
Accuracy on test set: 0.7307692307692307

Result of SVC(random_state=2023):
Best accuracy: 0.7650105708245244, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.782051282051282

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7671775898520083, best hyperparameter: {'estimator': None, 'n_estimators': 80}
Accuracy on test set: 0.7307692307692307

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7556553911205074, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.8076923076923077

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7761627906976744, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7564102564102564

Statistical Feature Selector with method=mi completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8060782241014799, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7948717948717948

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.815169133192389, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7213002114164906, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.7145877378435519, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.6794871794871795

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8061310782241016, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.782051282051282

Result of SVC(random_state=2023):
Best accuracy: 0.7970930232558139, best hyperparameter: {'C': 1, 'kernel': 'linear'}
Accuracy on test set: 0.8333333333333334

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7992071881606766, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.8076923076923077

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.780708245243129, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.8076923076923077

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8174947145877379, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.8205128205128205

Statistical Feature Selector with method=anova completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7809725158562367, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7564102564102564

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8059725158562367, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.7948717948717948

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7421247357293869, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6691331923890064, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.5897435897435898

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8084038054968288, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7810253699788584, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7675475687103595, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 50}
Accuracy on test set: 0.7307692307692307

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7579281183932347, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.8076923076923077

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7830866807610993, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.8076923076923077

Step Forward Feature Selection with LogisticRegression(random_state=2023) to select 5 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8288583509513743, best hyperparameter: {'C': 0.2, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8174418604651162, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7853594080338266, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.7969873150105707, best hyperparameter: {'n_neighbors': 3, 'weights': 'uniform'}
Accuracy on test set: 0.7948717948717948

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8196617336152219, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.8218816067653277, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8242600422832981, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8264270613107823, best hyperparameter: {'max_depth': 5, 'n_estimators': 80}
Accuracy on test set: 0.8333333333333334

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.812737843551797, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.717948717948718

Step Forward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 5 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8288583509513743, best hyperparameter: {'C': 0.2, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8174418604651162, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7853594080338266, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.7969873150105707, best hyperparameter: {'n_neighbors': 3, 'weights': 'uniform'}
Accuracy on test set: 0.7948717948717948

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8196617336152219, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.8218816067653277, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8242600422832981, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8264270613107823, best hyperparameter: {'max_depth': 5, 'n_estimators': 80}
Accuracy on test set: 0.8333333333333334

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.812737843551797, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.717948717948718

Step Forward Feature Selection with AdaBoostClassifier(random_state=2023) to select 5 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8083509513742072, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7435897435897436

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8060782241014799, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7559725158562367, best hyperparameter: {'class_weight': None, 'max_depth': 10}
Accuracy on test set: 0.717948717948718

Result of KNeighborsClassifier():
Best accuracy: 0.7900105708245242, best hyperparameter: {'n_neighbors': 5, 'weights': 'uniform'}
Accuracy on test set: 0.7692307692307693

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7992071881606766, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.803752642706131, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8106765327695561, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7307692307692307

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7763742071881605, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7948717948717948

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7787526427061311, best hyperparameter: {'max_depth': 10, 'n_estimators': 10}
Accuracy on test set: 0.7692307692307693

Step Forward Feature Selection with LogisticRegression(random_state=2023) to select 6 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8357293868921776, best hyperparameter: {'C': 10, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8197145877378436, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7736786469344609, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.7921775898520084, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.7692307692307693

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8219344608879492, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.8197145877378436, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7307692307692307

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.815169133192389, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7692307692307693

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8195560253699788, best hyperparameter: {'max_depth': 5, 'n_estimators': 100}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8242071881606765, best hyperparameter: {'max_depth': 5, 'n_estimators': 30}
Accuracy on test set: 0.7948717948717948

Step Forward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 6 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8151162790697674, best hyperparameter: {'C': 5, 'max_iter': 50}
Accuracy on test set: 0.7564102564102564

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8129492600422832, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.783245243128964, best hyperparameter: {'class_weight': None, 'max_depth': None}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.8039640591966173, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.7692307692307693

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8127906976744186, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.8401162790697674, best hyperparameter: {'C': 5, 'kernel': 'rbf'}
Accuracy on test set: 0.7948717948717948

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8242600422832981, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7692307692307693

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8244186046511628, best hyperparameter: {'max_depth': 10, 'n_estimators': 30}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8313424947145878, best hyperparameter: {'max_depth': 10, 'n_estimators': 30}
Accuracy on test set: 0.782051282051282

Step Forward Feature Selection with AdaBoostClassifier(random_state=2023) to select 6 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8038054968287526, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7307692307692307

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7992600422832981, best hyperparameter: {'alpha': 10, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7488372093023254, best hyperparameter: {'class_weight': None, 'max_depth': None}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.7784883720930231, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.7051282051282052

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7969344608879492, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.8081923890063425, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.803752642706131, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 30}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7854651162790697, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.7948717948717948

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7828752642706132, best hyperparameter: {'max_depth': 5, 'n_estimators': 100}
Accuracy on test set: 0.8205128205128205

Step Forward Feature Selection with LogisticRegression(random_state=2023) to select 7 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.835782241014799, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8243128964059195, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7783826638477801, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.7307692307692307

Result of KNeighborsClassifier():
Best accuracy: 0.776215644820296, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.7692307692307693

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8242600422832981, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.8197145877378436, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.782051282051282

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8243128964059195, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7692307692307693

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8196088794926004, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.8205128205128205

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8082452431289641, best hyperparameter: {'max_depth': 5, 'n_estimators': 30}
Accuracy on test set: 0.7948717948717948

Step Forward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 7 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8173890063424947, best hyperparameter: {'C': 5, 'max_iter': 50}
Accuracy on test set: 0.7564102564102564

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8129492600422832, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7923890063424948, best hyperparameter: {'class_weight': None, 'max_depth': None}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.7994186046511628, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.7564102564102564

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.812737843551797, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.8423890063424947, best hyperparameter: {'C': 5, 'kernel': 'rbf'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8265327695560254, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7692307692307693

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.819767441860465, best hyperparameter: {'max_depth': 5, 'n_estimators': 50}
Accuracy on test set: 0.7948717948717948

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8267441860465116, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7435897435897436

Step Forward Feature Selection with AdaBoostClassifier(random_state=2023) to select 7 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8151162790697674, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7564102564102564

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.815169133192389, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7603594080338267, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6538461538461539

Result of KNeighborsClassifier():
Best accuracy: 0.7901162790697673, best hyperparameter: {'n_neighbors': 5, 'weights': 'distance'}
Accuracy on test set: 0.7692307692307693

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8105179704016912, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.8357293868921776, best hyperparameter: {'C': 5, 'kernel': 'rbf'}
Accuracy on test set: 0.782051282051282

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8105179704016914, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7692307692307693

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8241543340380548, best hyperparameter: {'max_depth': 5, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8196617336152219, best hyperparameter: {'max_depth': 5, 'n_estimators': 30}
Accuracy on test set: 0.8205128205128205

Step Forward Feature Selection with LogisticRegression(random_state=2023) to select 8 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8380021141649048, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8220401691331924, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7715116279069767, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.7989957716701902, best hyperparameter: {'n_neighbors': 7, 'weights': 'uniform'}
Accuracy on test set: 0.7307692307692307

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8219873150105708, best hyperparameter: {'solver': 'lsqr'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.8196617336152221, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8197145877378436, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7692307692307693

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8195031712473572, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7435897435897436

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8059196617336152, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7948717948717948

Step Forward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 8 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8105708245243128, best hyperparameter: {'C': 5, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8106765327695559, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7788054968287526, best hyperparameter: {'class_weight': None, 'max_depth': None}
Accuracy on test set: 0.7692307692307693

Result of KNeighborsClassifier():
Best accuracy: 0.7832980972515855, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.717948717948718

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8083509513742072, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.8218816067653277, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7992600422832981, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8175475687103594, best hyperparameter: {'max_depth': None, 'n_estimators': 30}
Accuracy on test set: 0.7307692307692307

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8199260042283297, best hyperparameter: {'max_depth': 10, 'n_estimators': 30}
Accuracy on test set: 0.782051282051282

Step Forward Feature Selection with AdaBoostClassifier(random_state=2023) to select 8 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8174947145877379, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8152219873150106, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.776215644820296, best hyperparameter: {'class_weight': None, 'max_depth': 10}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.7785940803382664, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.7948717948717948

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8082980972515855, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.8195560253699788, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8129492600422832, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.8205128205128205

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8130549682875264, best hyperparameter: {'max_depth': 10, 'n_estimators': 30}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8084038054968288, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.8076923076923077

Step Forward Feature Selection with LogisticRegression(random_state=2023) to select 9 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8357293868921776, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8220401691331924, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7532769556025369, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.7830338266384776, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.7307692307692307

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8242071881606765, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.8264799154334037, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.7948717948717948

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8152219873150106, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8104122621564482, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8219873150105709, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7692307692307693

Step Forward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 9 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8105708245243128, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8129492600422832, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7650105708245242, best hyperparameter: {'class_weight': None, 'max_depth': None}
Accuracy on test set: 0.7692307692307693

Result of KNeighborsClassifier():
Best accuracy: 0.803752642706131, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.7564102564102564

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8105708245243128, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.8198202959830866, best hyperparameter: {'C': 50, 'kernel': 'linear'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8082452431289641, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7948717948717948

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8289112050739957, best hyperparameter: {'max_depth': None, 'n_estimators': 30}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8243128964059198, best hyperparameter: {'max_depth': 5, 'n_estimators': 30}
Accuracy on test set: 0.782051282051282

Step Forward Feature Selection with AdaBoostClassifier(random_state=2023) to select 9 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8174947145877379, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8151691331923889, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7968816067653276, best hyperparameter: {'class_weight': None, 'max_depth': None}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.7830338266384776, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.7692307692307693

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8174418604651162, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.8243128964059198, best hyperparameter: {'C': 5, 'kernel': 'rbf'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8176532769556026, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7692307692307693

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8309725158562369, best hyperparameter: {'max_depth': 5, 'n_estimators': 50}
Accuracy on test set: 0.782051282051282

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8310782241014799, best hyperparameter: {'max_depth': 5, 'n_estimators': 80}
Accuracy on test set: 0.782051282051282

Step Forward Feature Selection with LogisticRegression(random_state=2023) to select 10 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8379492600422832, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8402219873150105, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7532769556025369, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.7716173361522198, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.7435897435897436

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8355708245243129, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.8196617336152219, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8265856236786469, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8080866807610994, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8127906976744186, best hyperparameter: {'max_depth': 5, 'n_estimators': 80}
Accuracy on test set: 0.8205128205128205

Step Forward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 10 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8152219873150106, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8083509513742071, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7533298097251585, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.7051282051282052

Result of KNeighborsClassifier():
Best accuracy: 0.8038054968287526, best hyperparameter: {'n_neighbors': 7, 'weights': 'uniform'}
Accuracy on test set: 0.6923076923076923

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8128964059196617, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.8243128964059195, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.782051282051282

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8082452431289641, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7948717948717948

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.831183932346723, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.782051282051282

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8289640591966172, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7948717948717948

Step Forward Feature Selection with AdaBoostClassifier(random_state=2023) to select 10 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8129492600422832, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8151691331923889, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7788054968287526, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.7671247357293869, best hyperparameter: {'n_neighbors': 5, 'weights': 'distance'}
Accuracy on test set: 0.7307692307692307

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8105708245243128, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.8263742071881607, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.782051282051282

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8199788583509513, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8219344608879492, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8312367864693446, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Step Forward Feature Selection with LogisticRegression(random_state=2023) to select 11 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8379492600422832, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8288583509513743, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.737262156448203, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.776215644820296, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.7564102564102564

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8310253699788583, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.8265327695560254, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.782051282051282

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8151691331923889, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.8076923076923077

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8194503171247357, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7307692307692307

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8196088794926004, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Step Forward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 11 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8174418604651162, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7564102564102564

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8197145877378436, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7695560253699788, best hyperparameter: {'class_weight': None, 'max_depth': 10}
Accuracy on test set: 0.7051282051282052

Result of KNeighborsClassifier():
Best accuracy: 0.7900634249471459, best hyperparameter: {'n_neighbors': 7, 'weights': 'uniform'}
Accuracy on test set: 0.7307692307692307

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8174418604651162, best hyperparameter: {'solver': 'lsqr'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.8266384778012684, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.782051282051282

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8059725158562367, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7948717948717948

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8310253699788583, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8310782241014799, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Step Forward Feature Selection with AdaBoostClassifier(random_state=2023) to select 11 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8129492600422832, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8128964059196617, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7696617336152218, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.760306553911205, best hyperparameter: {'n_neighbors': 5, 'weights': 'distance'}
Accuracy on test set: 0.7307692307692307

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8105708245243128, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.8263742071881607, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8199788583509513, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8128964059196617, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8243657505285412, best hyperparameter: {'max_depth': 5, 'n_estimators': 80}
Accuracy on test set: 0.8461538461538461

Step Forward Feature Selection with LogisticRegression(random_state=2023) to select 12 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8380021141649049, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8311310782241014, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7463002114164906, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6282051282051282

Result of KNeighborsClassifier():
Best accuracy: 0.7762684989429175, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.7435897435897436

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8288583509513743, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.8288583509513743, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.815169133192389, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.805813953488372, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8218816067653277, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.782051282051282

Step Forward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 12 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8197145877378436, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8219873150105708, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7650634249471459, best hyperparameter: {'class_weight': None, 'max_depth': 10}
Accuracy on test set: 0.7435897435897436

Result of KNeighborsClassifier():
Best accuracy: 0.7762684989429175, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.7564102564102564

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8219873150105708, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.8152219873150106, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.81284355179704, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.8076923076923077

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8334566596194504, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.84053911205074, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Step Forward Feature Selection with AdaBoostClassifier(random_state=2023) to select 12 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8128964059196617, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8106236786469344, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7765327695560253, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.7579281183932347, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.7564102564102564

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8060253699788584, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.81284355179704, best hyperparameter: {'C': 5, 'kernel': 'rbf'}
Accuracy on test set: 0.7307692307692307

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8199788583509513, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.831183932346723, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7948717948717948

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8335623678646934, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7435897435897436

Step Forward Feature Selection with LogisticRegression(random_state=2023) to select 13 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8380021141649049, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8220401691331924, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7394820295983087, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6410256410256411

Result of KNeighborsClassifier():
Best accuracy: 0.7671775898520083, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6923076923076923

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8220401691331924, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.782051282051282

Result of SVC(random_state=2023):
Best accuracy: 0.8218816067653277, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8152219873150106, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8013742071881607, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7435897435897436

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8082452431289641, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7564102564102564

Step Forward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 13 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8221458773784356, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8198202959830866, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7719873150105708, best hyperparameter: {'class_weight': None, 'max_depth': None}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.755813953488372, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6666666666666666

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8265856236786469, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.8310253699788583, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.7307692307692307

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8015327695560254, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8426004228329809, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8336680761099367, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7948717948717948

Step Forward Feature Selection with AdaBoostClassifier(random_state=2023) to select 13 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8106236786469344, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8083509513742072, best hyperparameter: {'alpha': 1, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7810782241014799, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.7556553911205073, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.7564102564102564

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7991543340380549, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.8036469344608879, best hyperparameter: {'C': 5, 'kernel': 'rbf'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8199788583509513, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8221458773784356, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8174947145877379, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Step Forward Feature Selection with LogisticRegression(random_state=2023) to select 14 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8380021141649049, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8220401691331924, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.737262156448203, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.7671775898520085, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.6794871794871795

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8152219873150106, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.8243128964059198, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7948717948717948

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8174947145877379, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8034355179704017, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.717948717948718

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8013742071881607, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7948717948717948

Step Forward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 14 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8244186046511628, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7435897435897436

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8221458773784356, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7743657505285412, best hyperparameter: {'class_weight': None, 'max_depth': 10}
Accuracy on test set: 0.782051282051282

Result of KNeighborsClassifier():
Best accuracy: 0.764799154334038, best hyperparameter: {'n_neighbors': 5, 'weights': 'distance'}
Accuracy on test set: 0.717948717948718

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8243128964059195, best hyperparameter: {'solver': 'lsqr'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.8242071881606765, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.7307692307692307

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7992071881606765, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7948717948717948

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8356765327695561, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8472515856236786, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.782051282051282

Step Forward Feature Selection with AdaBoostClassifier(random_state=2023) to select 14 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8082980972515855, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8082980972515855, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7696088794926004, best hyperparameter: {'class_weight': None, 'max_depth': 10}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.7510042283298097, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.7564102564102564

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7900105708245242, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.7969873150105709, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7307692307692307

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8199788583509513, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8174418604651162, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8219873150105708, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7948717948717948

Step Forward Feature Selection with LogisticRegression(random_state=2023) to select 15 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8357293868921776, best hyperparameter: {'C': 0.2, 'max_iter': 50}
Accuracy on test set: 0.7564102564102564

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.819767441860465, best hyperparameter: {'alpha': 0.5, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7417547568710361, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6410256410256411

Result of KNeighborsClassifier():
Best accuracy: 0.7603594080338266, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.6538461538461539

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8129492600422832, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.782051282051282

Result of SVC(random_state=2023):
Best accuracy: 0.8265856236786469, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7948717948717948

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8174947145877379, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7968287526427061, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8014799154334037, best hyperparameter: {'max_depth': 5, 'n_estimators': 80}
Accuracy on test set: 0.8076923076923077

Step Forward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 15 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8129492600422832, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8152748414376321, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.7948717948717948

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7696088794926004, best hyperparameter: {'class_weight': None, 'max_depth': None}
Accuracy on test set: 0.7435897435897436

Result of KNeighborsClassifier():
Best accuracy: 0.7603594080338265, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.7307692307692307

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8243128964059198, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.8448202959830866, best hyperparameter: {'C': 5, 'kernel': 'rbf'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8014799154334037, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7948717948717948

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8379492600422832, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.7948717948717948

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8471987315010571, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Step Forward Feature Selection with AdaBoostClassifier(random_state=2023) to select 15 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8082980972515855, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8105708245243128, best hyperparameter: {'alpha': 10, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7787526427061311, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.7576638477801269, best hyperparameter: {'n_neighbors': 7, 'weights': 'uniform'}
Accuracy on test set: 0.7948717948717948

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7945031712473571, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.7899048625792812, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8131606765327696, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8219873150105708, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8150634249471459, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Step Forward Feature Selection with LogisticRegression(random_state=2023) to select 16 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8334038054968287, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8174418604651162, best hyperparameter: {'alpha': 1, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7395348837209302, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.7488372093023256, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6666666666666666

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8128964059196617, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.782051282051282

Result of SVC(random_state=2023):
Best accuracy: 0.8243128964059195, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7948717948717948

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8082980972515855, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7948717948717948

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.805813953488372, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8082452431289641, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.782051282051282

Step Forward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 16 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8151162790697674, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7564102564102564

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8106765327695561, best hyperparameter: {'alpha': 10, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7559725158562367, best hyperparameter: {'class_weight': None, 'max_depth': 10}
Accuracy on test set: 0.7051282051282052

Result of KNeighborsClassifier():
Best accuracy: 0.7602536997885835, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.7435897435897436

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8128964059196617, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.8265327695560254, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8173890063424947, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7692307692307693

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8404334038054968, best hyperparameter: {'max_depth': 10, 'n_estimators': 30}
Accuracy on test set: 0.7948717948717948

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8380021141649049, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Step Forward Feature Selection with AdaBoostClassifier(random_state=2023) to select 16 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8059725158562367, best hyperparameter: {'C': 10, 'max_iter': 50}
Accuracy on test set: 0.7307692307692307

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8059196617336152, best hyperparameter: {'alpha': 10, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7696088794926004, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.7553382663847781, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.7564102564102564

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7991014799154333, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.789799154334038, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8130549682875264, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7307692307692307

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8243657505285412, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8220401691331924, best hyperparameter: {'max_depth': None, 'n_estimators': 30}
Accuracy on test set: 0.7435897435897436

Step Forward Feature Selection with LogisticRegression(random_state=2023) to select 17 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8311310782241014, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8174418604651162, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.737262156448203, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6538461538461539

Result of KNeighborsClassifier():
Best accuracy: 0.7488900634249471, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.6666666666666666

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8083509513742072, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.782051282051282

Result of SVC(random_state=2023):
Best accuracy: 0.8220401691331924, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.782051282051282

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8060253699788584, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7990486257928118, best hyperparameter: {'max_depth': 5, 'n_estimators': 50}
Accuracy on test set: 0.7948717948717948

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8058668076109935, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7435897435897436

Step Forward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 17 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8151162790697674, best hyperparameter: {'C': 0.2, 'max_iter': 50}
Accuracy on test set: 0.7307692307692307

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8128964059196617, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7538054968287525, best hyperparameter: {'class_weight': None, 'max_depth': None}
Accuracy on test set: 0.7051282051282052

Result of KNeighborsClassifier():
Best accuracy: 0.7741014799154333, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.7051282051282052

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8150634249471459, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.8333509513742072, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.817600422832981, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8493657505285412, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.782051282051282

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8492600422832981, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.8076923076923077

Step Forward Feature Selection with AdaBoostClassifier(random_state=2023) to select 17 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8082980972515855, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8105179704016912, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7673890063424946, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.7051282051282052

Result of KNeighborsClassifier():
Best accuracy: 0.7395877378435517, best hyperparameter: {'n_neighbors': 7, 'weights': 'uniform'}
Accuracy on test set: 0.7435897435897436

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.801321353065539, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7948717948717948

Result of SVC(random_state=2023):
Best accuracy: 0.796723044397463, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8108350951374208, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7307692307692307

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8218816067653277, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8174418604651162, best hyperparameter: {'max_depth': 10, 'n_estimators': 30}
Accuracy on test set: 0.7564102564102564

Step Forward Feature Selection with LogisticRegression(random_state=2023) to select 18 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8288583509513743, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8151162790697674, best hyperparameter: {'alpha': 10, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7373150105708246, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6538461538461539

Result of KNeighborsClassifier():
Best accuracy: 0.7398520084566595, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.7051282051282052

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8106765327695561, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.782051282051282

Result of SVC(random_state=2023):
Best accuracy: 0.8289640591966172, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7948717948717948

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8129492600422832, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7948717948717948

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7898520084566595, best hyperparameter: {'max_depth': 5, 'n_estimators': 50}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7991543340380549, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7435897435897436

Step Forward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 18 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8219873150105708, best hyperparameter: {'C': 0.2, 'max_iter': 50}
Accuracy on test set: 0.7307692307692307

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.803752642706131, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7624735729386891, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.7672832980972515, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.7435897435897436

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8128435517970403, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.8288054968287526, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.717948717948718

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8105708245243128, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7692307692307693

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8333509513742072, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.844767441860465, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.782051282051282

Step Forward Feature Selection with AdaBoostClassifier(random_state=2023) to select 18 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8150634249471459, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7564102564102564

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8128435517970403, best hyperparameter: {'alpha': 10, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7629492600422833, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.7214587737843552, best hyperparameter: {'n_neighbors': 3, 'weights': 'distance'}
Accuracy on test set: 0.6538461538461539

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8013742071881607, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7948717948717948

Result of SVC(random_state=2023):
Best accuracy: 0.7945560253699788, best hyperparameter: {'C': 5, 'kernel': 'rbf'}
Accuracy on test set: 0.717948717948718

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8106236786469344, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 30}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8172304439746301, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8264799154334037, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.8076923076923077

Step Forward Feature Selection with LogisticRegression(random_state=2023) to select 19 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8289112050739957, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8173890063424947, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.741860465116279, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6538461538461539

Result of KNeighborsClassifier():
Best accuracy: 0.7238900634249471, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.6666666666666666

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8083509513742072, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.831183932346723, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7948717948717948

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8038583509513743, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7948717948717948

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.787737843551797, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7435897435897436

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8060253699788584, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7564102564102564

Step Forward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 19 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8151162790697674, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7307692307692307

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8060782241014799, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.751215644820296, best hyperparameter: {'class_weight': None, 'max_depth': None}
Accuracy on test set: 0.7307692307692307

Result of KNeighborsClassifier():
Best accuracy: 0.7764270613107822, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.7307692307692307

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.819767441860465, best hyperparameter: {'solver': 'lsqr'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.8356236786469344, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.7307692307692307

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8289112050739957, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7692307692307693

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8288054968287526, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.782051282051282

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8516384778012684, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.7307692307692307

Step Forward Feature Selection with AdaBoostClassifier(random_state=2023) to select 19 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8104651162790697, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8105179704016912, best hyperparameter: {'alpha': 10, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7720401691331924, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.7190803382663847, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.7307692307692307

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7991014799154333, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.7945031712473571, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8084038054968288, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7307692307692307

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8196617336152219, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8220401691331924, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.7948717948717948

Step Forward Feature Selection with LogisticRegression(random_state=2023) to select 20 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.831183932346723, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8151162790697674, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7395877378435517, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6538461538461539

Result of KNeighborsClassifier():
Best accuracy: 0.7238900634249471, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.6666666666666666

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8083509513742072, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.8197145877378436, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8038583509513743, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7948717948717948

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.798890063424947, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7969344608879492, best hyperparameter: {'max_depth': 5, 'n_estimators': 100}
Accuracy on test set: 0.7948717948717948

Step Forward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 20 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.815169133192389, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7307692307692307

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8038583509513743, best hyperparameter: {'alpha': 10, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7487843551797041, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.7557610993657505, best hyperparameter: {'n_neighbors': 7, 'weights': 'uniform'}
Accuracy on test set: 0.7051282051282052

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8152219873150106, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.8311310782241014, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.7307692307692307

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8175475687103594, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8241543340380548, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.8076923076923077

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8562367864693445, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Step Forward Feature Selection with AdaBoostClassifier(random_state=2023) to select 20 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8082452431289641, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7435897435897436

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8060253699788584, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.7948717948717948

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7514799154334038, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.7418076109936576, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.7051282051282052

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8105708245243128, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.796723044397463, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8083509513742072, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8035940803382664, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.835782241014799, best hyperparameter: {'max_depth': 10, 'n_estimators': 30}
Accuracy on test set: 0.782051282051282

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 60 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8130021141649049, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.717948717948718

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.794661733615222, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.7948717948717948

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7580338266384778, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.6392706131078224, best hyperparameter: {'n_neighbors': 5, 'weights': 'uniform'}
Accuracy on test set: 0.5897435897435898

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7947145877378434, best hyperparameter: {'solver': 'lsqr'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7715644820295982, best hyperparameter: {'C': 5, 'kernel': 'rbf'}
Accuracy on test set: 0.6794871794871795

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7738372093023256, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7556553911205074, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7739429175475687, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7948717948717948

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 60 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.774260042283298, best hyperparameter: {'C': 0.2, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7810253699788584, best hyperparameter: {'alpha': 1, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7304439746300212, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.6461416490486258, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.6025641025641025

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7719344608879493, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7604651162790697, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7719873150105707, best hyperparameter: {'estimator': None, 'n_estimators': 100}
Accuracy on test set: 0.7564102564102564

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7534355179704016, best hyperparameter: {'max_depth': None, 'n_estimators': 30}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.764799154334038, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.8333333333333334

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 60 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8015856236786469, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7947145877378435, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.735306553911205, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6117336152219873, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6153846153846154

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7923890063424948, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7307692307692307

Result of SVC(random_state=2023):
Best accuracy: 0.7923361522198731, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8152219873150106, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7307692307692307

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7715116279069767, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7715116279069767, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7948717948717948

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 61 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8130021141649049, best hyperparameter: {'C': 1, 'max_iter': 100}
Accuracy on test set: 0.717948717948718

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7923890063424947, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7580338266384778, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.6371035940803383, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.5512820512820513

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7947674418604651, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7786997885835095, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.782051282051282

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7784883720930231, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7534355179704016, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7694503171247357, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.7564102564102564

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 61 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7697145877378435, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7788054968287526, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7441331923890063, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.6461416490486258, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.5769230769230769

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7651162790697674, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7649577167019027, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.771828752642706, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7692307692307693

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7442389006342495, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.8076923076923077

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7645877378435519, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7564102564102564

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 61 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8015856236786469, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7969873150105709, best hyperparameter: {'alpha': 10, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7420718816067653, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6071353065539112, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6153846153846154

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7946617336152219, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.787737843551797, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8152219873150106, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7307692307692307

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7579809725158562, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7695031712473572, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 62 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8107293868921776, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.717948717948718

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7856236786469344, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7533298097251586, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.627906976744186, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.5641025641025641

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.785676532769556, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7741014799154333, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7786997885835095, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.8076923076923077

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7557610993657505, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7307692307692307

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7601479915433405, best hyperparameter: {'max_depth': 10, 'n_estimators': 30}
Accuracy on test set: 0.717948717948718

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 62 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7720401691331923, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7788054968287526, best hyperparameter: {'alpha': 10, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.737262156448203, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.6392706131078223, best hyperparameter: {'n_neighbors': 5, 'weights': 'distance'}
Accuracy on test set: 0.5769230769230769

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7697145877378435, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7626321353065538, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.771828752642706, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7692307692307693

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7534355179704016, best hyperparameter: {'max_depth': None, 'n_estimators': 30}
Accuracy on test set: 0.782051282051282

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7671247357293869, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7435897435897436

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 62 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7924947145877377, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7991543340380549, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7514270613107822, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 10}
Accuracy on test set: 0.6410256410256411

Result of KNeighborsClassifier():
Best accuracy: 0.6097780126849894, best hyperparameter: {'n_neighbors': 5, 'weights': 'uniform'}
Accuracy on test set: 0.6025641025641025

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7969344608879492, best hyperparameter: {'solver': 'lsqr'}
Accuracy on test set: 0.7307692307692307

Result of SVC(random_state=2023):
Best accuracy: 0.7742071881606765, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8152219873150106, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7307692307692307

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7443974630021142, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.7948717948717948

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7785412262156448, best hyperparameter: {'max_depth': 10, 'n_estimators': 30}
Accuracy on test set: 0.7692307692307693

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 63 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8107293868921776, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.717948717948718

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7833509513742072, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.7948717948717948

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.755708245243129, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.62330866807611, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6153846153846154

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.785676532769556, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7648520084566595, best hyperparameter: {'C': 5, 'kernel': 'rbf'}
Accuracy on test set: 0.6794871794871795

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7764270613107822, best hyperparameter: {'estimator': None, 'n_estimators': 80}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7467230443974631, best hyperparameter: {'max_depth': 5, 'n_estimators': 80}
Accuracy on test set: 0.717948717948718

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7761099365750528, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.717948717948718

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 63 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7811310782241014, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7878435517970402, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.7948717948717948

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7213530655391122, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.7051282051282052

Result of KNeighborsClassifier():
Best accuracy: 0.6368393234672305, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.5897435897435898

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7719873150105707, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7627378435517971, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7787526427061311, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7564102564102564

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7648520084566597, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7577695560253701, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.7948717948717948

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 63 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7901691331923889, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7946088794926004, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.744291754756871, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 10}
Accuracy on test set: 0.6410256410256411

Result of KNeighborsClassifier():
Best accuracy: 0.5979915433403805, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.5897435897435898

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7992071881606765, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7307692307692307

Result of SVC(random_state=2023):
Best accuracy: 0.7832980972515855, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.782051282051282

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8152219873150106, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7307692307692307

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.760306553911205, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.8205128205128205

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7763742071881606, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 64 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8084566596194502, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7051282051282052

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7856236786469344, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.7948717948717948

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.760306553911205, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.6279598308668076, best hyperparameter: {'n_neighbors': 7, 'weights': 'uniform'}
Accuracy on test set: 0.5769230769230769

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.778858350951374, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7697145877378435, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7764270613107822, best hyperparameter: {'estimator': None, 'n_estimators': 80}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7534883720930232, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7581923890063423, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 64 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7743128964059196, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7564102564102564

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7901162790697673, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7304439746300211, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.7051282051282052

Result of KNeighborsClassifier():
Best accuracy: 0.6459830866807612, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.6282051282051282

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7650634249471457, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7696088794926004, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7763742071881607, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.8076923076923077

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7626849894291754, best hyperparameter: {'max_depth': None, 'n_estimators': 30}
Accuracy on test set: 0.782051282051282

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7785412262156447, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.782051282051282

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 64 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7856236786469344, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7948717948717948

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7855179704016912, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7467758985200845, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 10}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.6141649048625794, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.6025641025641025

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7832980972515855, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7832980972515855, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8152219873150106, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7307692307692307

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.771723044397463, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7671775898520086, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 65 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8107293868921776, best hyperparameter: {'C': 1, 'max_iter': 100}
Accuracy on test set: 0.717948717948718

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7810782241014799, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.760306553911205, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.6210887949260042, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.5897435897435898

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.778858350951374, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.7673361522198731, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.717948717948718

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7673361522198731, best hyperparameter: {'estimator': None, 'n_estimators': 80}
Accuracy on test set: 0.7051282051282052

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7854651162790697, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.7307692307692307

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7739957716701902, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7948717948717948

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 65 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7765856236786469, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7564102564102564

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.78784355179704, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.73276955602537, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.7051282051282052

Result of KNeighborsClassifier():
Best accuracy: 0.645877378435518, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.6153846153846154

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.771828752642706, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7741014799154333, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7786997885835094, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.8076923076923077

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7489957716701902, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.7948717948717948

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7786469344608878, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.8076923076923077

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 65 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7833509513742072, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7948717948717948

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7923361522198731, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7376849894291754, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 10}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.625475687103594, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.5512820512820513

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7878435517970401, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7741014799154333, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8152219873150106, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7693446088794925, best hyperparameter: {'max_depth': 20, 'n_estimators': 100}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7810782241014799, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7564102564102564

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 66 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8107293868921776, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7307692307692307

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7810253699788583, best hyperparameter: {'alpha': 10, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7556025369978859, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.6164904862579281, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6025641025641025

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7765327695560253, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7696617336152218, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.7307692307692307

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7673361522198732, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7443974630021142, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7739957716701902, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.7564102564102564

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 66 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.774260042283298, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7435897435897436

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7832980972515855, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.73276955602537, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6596194503171248, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.5769230769230769

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.760306553911205, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7650105708245244, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7307692307692307

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7809725158562367, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.717948717948718

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7647991543340381, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.7948717948717948

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.773890063424947, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7692307692307693

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 66 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7854651162790697, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7968816067653276, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7490486257928117, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 10}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.6413847780126851, best hyperparameter: {'n_neighbors': 7, 'weights': 'uniform'}
Accuracy on test set: 0.5897435897435898

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7877906976744186, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7649577167019027, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8152219873150106, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7693446088794925, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7809196617336152, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.7564102564102564

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 67 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8084566596194502, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.717948717948718

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7855708245243129, best hyperparameter: {'alpha': 10, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7442389006342494, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.625739957716702, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.5897435897435898

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7788054968287526, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7719344608879493, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.7051282051282052

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7650634249471459, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7601479915433405, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7761627906976744, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7051282051282052

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 67 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.774260042283298, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7564102564102564

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7855708245243129, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7285940803382663, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.717948717948718

Result of KNeighborsClassifier():
Best accuracy: 0.6503171247357293, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.6025641025641025

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7695560253699788, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7604122621564482, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7307692307692307

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7809725158562367, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.717948717948718

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7671775898520083, best hyperparameter: {'max_depth': None, 'n_estimators': 30}
Accuracy on test set: 0.7435897435897436

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7604651162790697, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.8076923076923077

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 67 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7785412262156448, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7968816067653276, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7421247357293869, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 10}
Accuracy on test set: 0.6538461538461539

Result of KNeighborsClassifier():
Best accuracy: 0.6391120507399577, best hyperparameter: {'n_neighbors': 7, 'weights': 'uniform'}
Accuracy on test set: 0.5897435897435898

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.78784355179704, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7626321353065538, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7307692307692307

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8152219873150106, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7671247357293869, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7830338266384776, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.8076923076923077

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 68 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8016384778012684, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7307692307692307

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7856236786469344, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7329809725158561, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.6393763213530657, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.5641025641025641

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7833509513742071, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7717758985200845, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7647463002114165, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7564102564102564

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7302854122621564, best hyperparameter: {'max_depth': None, 'n_estimators': 30}
Accuracy on test set: 0.6666666666666666

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7764270613107822, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 68 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7651691331923889, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7564102564102564

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7878435517970401, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7304968287526427, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.7051282051282052

Result of KNeighborsClassifier():
Best accuracy: 0.6413319238900634, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6025641025641025

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7673361522198732, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7741014799154333, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7307692307692307

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7809725158562367, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.717948717948718

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7533298097251586, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.782051282051282

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7647463002114165, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7307692307692307

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 68 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7809196617336152, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7946088794926004, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.744291754756871, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 10}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.6368393234672306, best hyperparameter: {'n_neighbors': 7, 'weights': 'uniform'}
Accuracy on test set: 0.5769230769230769

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.78784355179704, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7693974630021142, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.7051282051282052

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8152219873150106, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7602008456659618, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7307692307692307

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7738900634249471, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7948717948717948

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 69 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7993657505285412, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7307692307692307

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7832980972515855, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7352008456659619, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.6210359408033828, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.5769230769230769

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7810782241014799, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7786469344608878, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.717948717948718

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.771723044397463, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7564102564102564

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7373150105708246, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7948717948717948

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7738372093023256, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 69 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7719873150105708, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7764270613107822, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7236257928118394, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.7051282051282052

Result of KNeighborsClassifier():
Best accuracy: 0.6481501057082453, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6153846153846154

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7650634249471459, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7740486257928119, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7809725158562367, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.717948717948718

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7693974630021142, best hyperparameter: {'max_depth': None, 'n_estimators': 30}
Accuracy on test set: 0.8076923076923077

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7488372093023256, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.8461538461538461

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 69 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7786469344608878, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7968816067653275, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7377906976744185, best hyperparameter: {'class_weight': 'balanced', 'max_depth': None}
Accuracy on test set: 0.6282051282051282

Result of KNeighborsClassifier():
Best accuracy: 0.6300739957716702, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.5641025641025641

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.78784355179704, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7763742071881606, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.7051282051282052

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8151162790697674, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7556553911205073, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.717948717948718

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.785306553911205, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7435897435897436

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 70 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7970401691331924, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.717948717948718

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7832980972515855, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7374735729386892, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.6256342494714587, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.5769230769230769

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7788054968287526, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7786469344608878, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.717948717948718

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.771723044397463, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7564102564102564

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7397463002114165, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7670718816067653, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.7307692307692307

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 70 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.765169133192389, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7788054968287527, best hyperparameter: {'alpha': 10, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7259513742071881, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.7051282051282052

Result of KNeighborsClassifier():
Best accuracy: 0.6436046511627908, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6153846153846154

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7650105708245242, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7763213530655391, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7809725158562367, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.717948717948718

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7555496828752643, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7490486257928118, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7564102564102564

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 70 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7809196617336152, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7877906976744186, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7399577167019027, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 10}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.6367336152219873, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6538461538461539

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7810253699788583, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7830866807610993, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.6923076923076923

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8151162790697674, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7512156448202958, best hyperparameter: {'max_depth': 5, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7672832980972515, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7051282051282052

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 71 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7970930232558139, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7307692307692307

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7833509513742072, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7329281183932347, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6230972515856237, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.5769230769230769

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7810782241014799, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7786997885835094, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7626321353065538, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7564102564102564

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7352536997885835, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.8076923076923077

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7647991543340381, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.7307692307692307

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 71 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7628964059196617, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7788054968287527, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7307692307692307

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7258985200845667, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6390591966173362, best hyperparameter: {'n_neighbors': 7, 'weights': 'uniform'}
Accuracy on test set: 0.6153846153846154

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7696088794926004, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7785940803382664, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7809725158562367, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.717948717948718

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7577695560253699, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7579809725158562, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.782051282051282

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 71 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7740486257928116, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.8205128205128205

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7923361522198731, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.739799154334038, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6139534883720931, best hyperparameter: {'n_neighbors': 5, 'weights': 'uniform'}
Accuracy on test set: 0.6025641025641025

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7900634249471459, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.787737843551797, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.6923076923076923

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8082980972515857, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7535412262156447, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.8076923076923077

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7715644820295984, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.7564102564102564

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 72 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7970930232558139, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7307692307692307

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7855708245243129, best hyperparameter: {'alpha': 1, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.735306553911205, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 10}
Accuracy on test set: 0.6666666666666666

Result of KNeighborsClassifier():
Best accuracy: 0.6300739957716702, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.5897435897435898

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7810782241014799, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7307692307692307

Result of SVC(random_state=2023):
Best accuracy: 0.7809725158562367, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7649577167019027, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7564102564102564

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7556553911205074, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.8076923076923077

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7830866807610993, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7692307692307693

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 72 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7606236786469344, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7564102564102564

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7787526427061311, best hyperparameter: {'alpha': 0.5, 'max_iter': None}
Accuracy on test set: 0.7307692307692307

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7304439746300212, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.7051282051282052

Result of KNeighborsClassifier():
Best accuracy: 0.6367864693446089, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6153846153846154

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.771828752642706, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.7671775898520083, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7809725158562367, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.717948717948718

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7535412262156447, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7948717948717948

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7670190274841436, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 72 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7718816067653277, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7948717948717948

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.794661733615222, best hyperparameter: {'alpha': 0.5, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.739799154334038, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6300211416490487, best hyperparameter: {'n_neighbors': 7, 'weights': 'uniform'}
Accuracy on test set: 0.6794871794871795

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7855708245243128, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.782051282051282

Result of SVC(random_state=2023):
Best accuracy: 0.7764270613107822, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.7051282051282052

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8060253699788584, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.748890063424947, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7627906976744185, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 73 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7970930232558139, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7307692307692307

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7878435517970402, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7420190274841436, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6209302325581396, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6025641025641025

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7856236786469344, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7307692307692307

Result of SVC(random_state=2023):
Best accuracy: 0.7809725158562367, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7649577167019027, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7564102564102564

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7467230443974631, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.782051282051282

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.76723044397463, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.7307692307692307

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 73 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7627906976744185, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7435897435897436

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7765327695560253, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7258985200845667, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6391120507399577, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6282051282051282

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7788054968287526, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.7830866807610993, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7809725158562367, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.717948717948718

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7580338266384778, best hyperparameter: {'max_depth': None, 'n_estimators': 30}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7650105708245242, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.8076923076923077

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 73 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.771828752642706, best hyperparameter: {'C': 0.2, 'max_iter': 50}
Accuracy on test set: 0.8076923076923077

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7855179704016912, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7398520084566597, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6232558139534884, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.6282051282051282

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7855708245243128, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.7649048625792811, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.782051282051282

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8060253699788584, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7464059196617335, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.764799154334038, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7435897435897436

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 74 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7970930232558139, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7307692307692307

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7878964059196617, best hyperparameter: {'alpha': 1, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.739799154334038, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6163847780126851, best hyperparameter: {'n_neighbors': 5, 'weights': 'distance'}
Accuracy on test set: 0.5512820512820513

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7902219873150105, best hyperparameter: {'solver': 'lsqr'}
Accuracy on test set: 0.7307692307692307

Result of SVC(random_state=2023):
Best accuracy: 0.7786997885835094, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7649577167019027, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7564102564102564

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7488900634249471, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7307692307692307

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7763742071881605, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.717948717948718

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 74 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7582980972515856, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7435897435897436

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7719873150105707, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7216701902748414, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.7051282051282052

Result of KNeighborsClassifier():
Best accuracy: 0.648202959830867, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6282051282051282

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7719344608879493, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.7739957716701902, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7307692307692307

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7671775898520083, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.717948717948718

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.748890063424947, best hyperparameter: {'max_depth': None, 'n_estimators': 30}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.751215644820296, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 74 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7696617336152218, best hyperparameter: {'C': 0.2, 'max_iter': 50}
Accuracy on test set: 0.7948717948717948

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7832980972515855, best hyperparameter: {'alpha': 0.5, 'max_iter': None}
Accuracy on test set: 0.7948717948717948

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.735306553911205, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6208245243128964, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.5897435897435898

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7832980972515855, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.782051282051282

Result of SVC(random_state=2023):
Best accuracy: 0.7741014799154333, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8060253699788584, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7489957716701902, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7435897435897436

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7693446088794925, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7435897435897436

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 75 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7970930232558139, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7307692307692307

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7855708245243129, best hyperparameter: {'alpha': 0.5, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7352536997885835, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6164376321353066, best hyperparameter: {'n_neighbors': 5, 'weights': 'distance'}
Accuracy on test set: 0.5769230769230769

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7833509513742072, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7764799154334037, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7649577167019027, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7564102564102564

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.755708245243129, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.764799154334038, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.8333333333333334

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 75 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7514799154334038, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7564102564102564

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7719873150105707, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7305496828752643, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.63446088794926, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.5769230769230769

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7718816067653277, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7763213530655391, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.717948717948718

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7671775898520083, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.717948717948718

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7604122621564482, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.8205128205128205

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.764904862579281, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 75 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.76723044397463, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7810253699788584, best hyperparameter: {'alpha': 0.5, 'max_iter': None}
Accuracy on test set: 0.7948717948717948

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7352536997885833, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6254756871035941, best hyperparameter: {'n_neighbors': 7, 'weights': 'uniform'}
Accuracy on test set: 0.6025641025641025

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7832980972515855, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.782051282051282

Result of SVC(random_state=2023):
Best accuracy: 0.7695031712473572, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8060253699788584, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7625792811839324, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7948717948717948

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7648520084566597, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.717948717948718

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 76 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7970930232558139, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7435897435897436

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7833509513742072, best hyperparameter: {'alpha': 10, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7306025369978858, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6164376321353066, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6025641025641025

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7810253699788582, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7717758985200845, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7307692307692307

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7695031712473572, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.717948717948718

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7330338266384778, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7625264270613107, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.6923076923076923

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 76 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7696088794926004, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7307692307692307

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7765327695560253, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7373150105708245, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.7051282051282052

Result of KNeighborsClassifier():
Best accuracy: 0.6208773784355179, best hyperparameter: {'n_neighbors': 7, 'weights': 'uniform'}
Accuracy on test set: 0.5769230769230769

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7673361522198732, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7785940803382664, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7671775898520083, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.717948717948718

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7193446088794925, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7488372093023254, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7692307692307693

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 76 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7695031712473572, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7764799154334037, best hyperparameter: {'alpha': 0.5, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7489429175475687, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6322410147991544, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.6025641025641025

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7718816067653276, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.782051282051282

Result of SVC(random_state=2023):
Best accuracy: 0.7672832980972515, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8060253699788584, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.744291754756871, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7762156448202958, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.782051282051282

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 77 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7970930232558139, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7435897435897436

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7855708245243129, best hyperparameter: {'alpha': 1, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7283298097251585, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.611892177589852, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.5769230769230769

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7879492600422833, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7809725158562367, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.760306553911205, best hyperparameter: {'estimator': None, 'n_estimators': 10}
Accuracy on test set: 0.7564102564102564

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7352008456659618, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7556025369978858, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.7435897435897436

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 77 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7696088794926004, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7435897435897436

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7765327695560253, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.723784355179704, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6165433403805497, best hyperparameter: {'n_neighbors': 5, 'weights': 'uniform'}
Accuracy on test set: 0.5641025641025641

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.774260042283298, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7831923890063424, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7603594080338265, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7398520084566595, best hyperparameter: {'max_depth': 10, 'n_estimators': 30}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7649048625792811, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.7051282051282052

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 77 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.774154334038055, best hyperparameter: {'C': 0.2, 'max_iter': 50}
Accuracy on test set: 0.7948717948717948

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7765856236786469, best hyperparameter: {'alpha': 10, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7488900634249471, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6207188160676532, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.5641025641025641

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7901162790697673, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.782051282051282

Result of SVC(random_state=2023):
Best accuracy: 0.7742071881606765, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.7051282051282052

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8060253699788584, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7489429175475687, best hyperparameter: {'max_depth': None, 'n_estimators': 30}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7672832980972515, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.717948717948718

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 78 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7947674418604651, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7307692307692307

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7832980972515856, best hyperparameter: {'alpha': 1, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7260570824524312, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6141649048625794, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.5769230769230769

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7902219873150106, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.7786469344608878, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.760306553911205, best hyperparameter: {'estimator': None, 'n_estimators': 10}
Accuracy on test set: 0.7564102564102564

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7601479915433403, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7435897435897436

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7535940803382664, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 78 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7650634249471459, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7435897435897436

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7765327695560253, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7420190274841436, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6164376321353066, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.5256410256410257

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.774260042283298, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.76723044397463, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.755813953488372, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7671247357293869, best hyperparameter: {'max_depth': None, 'n_estimators': 30}
Accuracy on test set: 0.7435897435897436

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7489429175475687, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7307692307692307

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 78 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7718816067653276, best hyperparameter: {'C': 0.2, 'max_iter': 50}
Accuracy on test set: 0.7948717948717948

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7809725158562367, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7948717948717948

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7489429175475687, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.611892177589852, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.6282051282051282

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7832980972515855, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.782051282051282

Result of SVC(random_state=2023):
Best accuracy: 0.7808668076109935, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7051282051282052

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8060253699788584, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7555496828752643, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.8205128205128205

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7535412262156447, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.782051282051282

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 79 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7902219873150106, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.717948717948718

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7878435517970401, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7352008456659618, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.607293868921776, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.5641025641025641

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7855708245243129, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7832980972515855, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.7564102564102564

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.760306553911205, best hyperparameter: {'estimator': None, 'n_estimators': 10}
Accuracy on test set: 0.7564102564102564

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7443446088794925, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.782051282051282

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7534355179704016, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7564102564102564

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 79 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7628964059196617, best hyperparameter: {'C': 0.2, 'max_iter': 50}
Accuracy on test set: 0.7435897435897436

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7765327695560253, best hyperparameter: {'alpha': 100, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7328224101479914, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6187103594080339, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.5641025641025641

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.774260042283298, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7695031712473572, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7580866807610993, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7511627906976743, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.717948717948718

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7511627906976743, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.717948717948718

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 79 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7650634249471459, best hyperparameter: {'C': 0.2, 'max_iter': 50}
Accuracy on test set: 0.7948717948717948

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7810253699788584, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7398520084566595, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6162262156448203, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.5769230769230769

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7810253699788583, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.782051282051282

Result of SVC(random_state=2023):
Best accuracy: 0.7739957716701902, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7051282051282052

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8060253699788584, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7557610993657505, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7948717948717948

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7741014799154333, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Step Backward Feature Selection with LogisticRegression(random_state=2023) to select 80 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.785676532769556, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.717948717948718

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7855708245243129, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.723784355179704, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6140591966173362, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.5512820512820513

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7856236786469344, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7649577167019027, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7307692307692307

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.760306553911205, best hyperparameter: {'estimator': None, 'n_estimators': 10}
Accuracy on test set: 0.7564102564102564

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7330866807610994, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7435897435897436

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7511627906976743, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.6794871794871795

Step Backward Feature Selection with RandomForestClassifier(n_estimators=20, random_state=2023) to select 80 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7650634249471459, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7435897435897436

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.774260042283298, best hyperparameter: {'alpha': 0.5, 'max_iter': None}
Accuracy on test set: 0.717948717948718

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7306025369978858, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.7051282051282052

Result of KNeighborsClassifier():
Best accuracy: 0.6163847780126851, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.5769230769230769

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7674418604651162, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7580338266384778, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7435897435897436

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7580866807610993, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7351479915433403, best hyperparameter: {'max_depth': 5, 'n_estimators': 30}
Accuracy on test set: 0.7435897435897436

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7533826638477801, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.7564102564102564

Step Backward Feature Selection with AdaBoostClassifier(random_state=2023) to select 80 features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7650634249471459, best hyperparameter: {'C': 0.2, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7833509513742072, best hyperparameter: {'alpha': 0.5, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7512156448202958, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6230443974630022, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.5897435897435898

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7719344608879493, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.782051282051282

Result of SVC(random_state=2023):
Best accuracy: 0.7762684989429175, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.7051282051282052

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8060253699788584, best hyperparameter: {'estimator': None, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7579281183932347, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7579809725158562, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7564102564102564

Select Feature Importance with LogisticRegression(C=1000, random_state=2023) completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8082980972515855, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8105708245243128, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.782051282051282

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7465644820295982, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6410256410256411

Result of KNeighborsClassifier():
Best accuracy: 0.6755285412262156, best hyperparameter: {'n_neighbors': 7, 'weights': 'distance'}
Accuracy on test set: 0.6923076923076923

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8105179704016914, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.7832980972515855, best hyperparameter: {'C': 1, 'kernel': 'linear'}
Accuracy on test set: 0.7948717948717948

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7946617336152219, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7694503171247358, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.8076923076923077

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8014270613107822, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.7692307692307693

Select Feature Importance with DecisionTreeClassifier(random_state=2023) completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.812737843551797, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.717948717948718

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8265856236786469, best hyperparameter: {'alpha': 0.5, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7580866807610993, best hyperparameter: {'class_weight': None, 'max_depth': 10}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.7578752642706131, best hyperparameter: {'n_neighbors': 5, 'weights': 'distance'}
Accuracy on test set: 0.6410256410256411

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8174418604651162, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7307692307692307

Result of SVC(random_state=2023):
Best accuracy: 0.8105179704016914, best hyperparameter: {'C': 10, 'kernel': 'rbf'}
Accuracy on test set: 0.7051282051282052

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8060782241014799, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7307692307692307

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.812737843551797, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8173890063424947, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.7435897435897436

Select Feature Importance with RandomForestClassifier(random_state=2023) completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8082980972515855, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.8205128205128205

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8083509513742072, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7419661733615222, best hyperparameter: {'class_weight': 'balanced', 'max_depth': None}
Accuracy on test set: 0.6282051282051282

Result of KNeighborsClassifier():
Best accuracy: 0.6940274841437633, best hyperparameter: {'n_neighbors': 7, 'weights': 'uniform'}
Accuracy on test set: 0.6923076923076923

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7832980972515855, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7692307692307693

Result of SVC(random_state=2023):
Best accuracy: 0.806183932346723, best hyperparameter: {'C': 0.2, 'kernel': 'linear'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7855179704016912, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.8076923076923077

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7623678646934461, best hyperparameter: {'max_depth': 5, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8011099365750528, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.7692307692307693

Select Feature Importance with AdaBoostClassifier(random_state=2023) completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8152219873150106, best hyperparameter: {'C': 0.1, 'max_iter': 50}
Accuracy on test set: 0.717948717948718

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8198202959830867, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7533298097251586, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.710200845665962, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.7051282051282052

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8130549682875264, best hyperparameter: {'solver': 'lsqr'}
Accuracy on test set: 0.7435897435897436

Result of SVC(random_state=2023):
Best accuracy: 0.8060253699788584, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.8076923076923077

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7992071881606765, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.7435897435897436

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7830338266384776, best hyperparameter: {'max_depth': None, 'n_estimators': 50}
Accuracy on test set: 0.7948717948717948

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8083509513742072, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7948717948717948

Recursive Feature Addition with LogisticRegression(random_state=2023) completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8335095137420719, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.7435897435897436

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8106236786469344, best hyperparameter: {'alpha': 10, 'max_iter': None}
Accuracy on test set: 0.7564102564102564

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7489429175475688, best hyperparameter: {'class_weight': None, 'max_depth': 5}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.7581395348837209, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.7051282051282052

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.8152748414376321, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.8129492600422832, best hyperparameter: {'C': 0.1, 'kernel': 'linear'}
Accuracy on test set: 0.8076923076923077

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8038583509513743, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.8076923076923077

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.796828752642706, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.717948717948718

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8106765327695561, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

Recursive Feature Addition with DecisionTreeClassifier(random_state=2023) completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7373678646934461, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7307692307692307

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7260570824524312, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7051282051282052

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7375792811839323, best hyperparameter: {'class_weight': None, 'max_depth': None}
Accuracy on test set: 0.7051282051282052

Result of KNeighborsClassifier():
Best accuracy: 0.723890063424947, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6666666666666666

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7351479915433403, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.782051282051282

Result of SVC(random_state=2023):
Best accuracy: 0.7373150105708246, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7051282051282052

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7534883720930232, best hyperparameter: {'estimator': None, 'n_estimators': 30}
Accuracy on test set: 0.717948717948718

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.74223044397463, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.7307692307692307

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7467758985200845, best hyperparameter: {'max_depth': 10, 'n_estimators': 80}
Accuracy on test set: 0.7307692307692307

Recursive Feature Addition with RandomForestClassifier(random_state=2023) completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8150105708245242, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.812737843551797, best hyperparameter: {'alpha': 50, 'max_iter': None}
Accuracy on test set: 0.7948717948717948

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7352008456659619, best hyperparameter: {'class_weight': 'balanced', 'max_depth': None}
Accuracy on test set: 0.6794871794871795

Result of KNeighborsClassifier():
Best accuracy: 0.7853594080338265, best hyperparameter: {'n_neighbors': 5, 'weights': 'distance'}
Accuracy on test set: 0.7948717948717948

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.796723044397463, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.782051282051282

Result of SVC(random_state=2023):
Best accuracy: 0.8173890063424947, best hyperparameter: {'C': 1, 'kernel': 'rbf'}
Accuracy on test set: 0.8076923076923077

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8195560253699788, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.8205128205128205

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8148520084566595, best hyperparameter: {'max_depth': None, 'n_estimators': 100}
Accuracy on test set: 0.7692307692307693

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.8266913319238901, best hyperparameter: {'max_depth': 10, 'n_estimators': 30}
Accuracy on test set: 0.7948717948717948

Recursive Feature Addition with AdaBoostClassifier(random_state=2023) completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.8242071881606765, best hyperparameter: {'C': 1, 'max_iter': 50}
Accuracy on test set: 0.782051282051282

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.8219873150105709, best hyperparameter: {'alpha': 0.1, 'max_iter': None}
Accuracy on test set: 0.7435897435897436

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.7556553911205074, best hyperparameter: {'class_weight': None, 'max_depth': None}
Accuracy on test set: 0.7435897435897436

Result of KNeighborsClassifier():
Best accuracy: 0.7831923890063425, best hyperparameter: {'n_neighbors': 9, 'weights': 'uniform'}
Accuracy on test set: 0.7435897435897436

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.817336152219873, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7564102564102564

Result of SVC(random_state=2023):
Best accuracy: 0.815169133192389, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7692307692307693

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.8264799154334039, best hyperparameter: {'estimator': LogisticRegression(), 'n_estimators': 10}
Accuracy on test set: 0.782051282051282

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.8105708245243128, best hyperparameter: {'max_depth': 10, 'n_estimators': 30}
Accuracy on test set: 0.7564102564102564

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.828752642706131, best hyperparameter: {'max_depth': 10, 'n_estimators': 50}
Accuracy on test set: 0.717948717948718

Load all features completed. Start tuning hyperparameters:
Result of LogisticRegression(random_state=2023):
Best accuracy: 0.7581395348837209, best hyperparameter: {'C': 0.05, 'max_iter': 50}
Accuracy on test set: 0.7692307692307693

Result of RidgeClassifier(random_state=2023):
Best accuracy: 0.7742071881606766, best hyperparameter: {'alpha': 5, 'max_iter': None}
Accuracy on test set: 0.7692307692307693

Result of DecisionTreeClassifier(random_state=2023):
Best accuracy: 0.739799154334038, best hyperparameter: {'class_weight': 'balanced', 'max_depth': 5}
Accuracy on test set: 0.6923076923076923

Result of KNeighborsClassifier():
Best accuracy: 0.6187103594080339, best hyperparameter: {'n_neighbors': 9, 'weights': 'distance'}
Accuracy on test set: 0.6025641025641025

Result of LinearDiscriminantAnalysis():
Best accuracy: 0.7719873150105707, best hyperparameter: {'solver': 'svd'}
Accuracy on test set: 0.7307692307692307

Result of SVC(random_state=2023):
Best accuracy: 0.7535940803382664, best hyperparameter: {'C': 0.05, 'kernel': 'linear'}
Accuracy on test set: 0.7307692307692307

Result of AdaBoostClassifier(random_state=2023):
Best accuracy: 0.7579281183932347, best hyperparameter: {'estimator': None, 'n_estimators': 10}
Accuracy on test set: 0.7564102564102564

Result of RandomForestClassifier(random_state=2023):
Best accuracy: 0.7397463002114165, best hyperparameter: {'max_depth': None, 'n_estimators': 80}
Accuracy on test set: 0.7948717948717948

Result of ExtraTreesClassifier(random_state=2023):
Best accuracy: 0.7511099365750529, best hyperparameter: {'max_depth': 10, 'n_estimators': 100}
Accuracy on test set: 0.782051282051282

